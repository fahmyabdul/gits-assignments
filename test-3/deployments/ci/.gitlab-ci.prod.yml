stages: # List of stages for jobs, and their order of execution
  - test
  - build
  # - deploy

test-golang:
  stage: test
  tags:
    - golang
  before_script:
    - echo "[PROD] Before Script"
    - make build
    - CURRENT_VERSION=`./bin/test-3 version`
    - |
      if [ "$CURRENT_VERSION" != "" ]; then
        echo "Build Successful, using test-3 $CURRENT_VERSION"
      else
        echo "Unable to get current version of test-3, build failed!"
        exit 1
      fi
  script:
    - echo "[PROD] Script"
    - make test
  artifacts:
    expose_as: 'binary test-3'
    paths:
      - ./bin/test-3
    expire_in: 5 days
  allow_failure: true

sonarqube-check:
  stage: test
  tags:
    - sonarqube
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner -X
  allow_failure: true

build-image:
  stage: build
  tags:
    - docker
  services:
    - name: docker:dind
      command: ["--insecure-registry=$HARBOR_URL"]
  variables:
    # Use the overlayfs driver for improved performance.
    DOCKER_DRIVER: overlay2
    # Disable TLS since we're running inside local network.
    DOCKER_TLS_CERTDIR: ""
    REPO_URL: $HARBOR_URL/$HARBOR_PROJECT/test-3:latest
  before_script:
    - docker login -u "$HARBOR_USERNAME" -p "$HARBOR_PASSWORD" $HARBOR_URL
  script:
    - docker build -t ${REPO_URL/http\:\/\/} -f Dockerfile .
    - docker push ${REPO_URL/http\:\/\/}