syntax = "proto3";

package book;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package="github.com/fahmyabdul/gits-assignments/test-3/internal/proto";

message Book {
  int32 id = 1;
  string name = 2;
  int32 pages = 3;
  int32 publisher_id = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
}

message BookCreateRequest {
  Book request = 1;
  int32 author_id = 2;
}

message BookCreateResponse {
  string status = 1;
}

message BookFetchByIdRequest {
  int32 id = 1;
}

message BookFetchByIdResponse {
  string status = 1;
  Book data = 2;
}

message BookFetchByNameRequest {
  string name = 1;
}

message BookFetchByNameResponse {
  string status = 1;
  repeated Book data = 2;
}

message BookFetchAllResponse {
  string status = 1;
  repeated Book data = 2;
}

message BookUpdateRequest {
  int32 id = 1;
  int32 author_id = 2;
  Book request = 3;
}

message BookUpdateResponse {
  string status = 1;
}

message BookDeleteRequest {
  int32 id = 1;
}

message BookDeleteResponse {
  string status = 1;
}

message BookFetchByAuthorIdRequest {
  int32 author_id = 1;
}

message BookFetchByAuthorIdResponse {
  string status = 1;
  int32 author_id = 2;
  string author_name = 3;
  repeated Book data = 4;
}

service BookService {
  rpc CreateBook(BookCreateRequest) returns (BookCreateResponse);
  rpc FetchByIdBook (BookFetchByIdRequest) returns (BookFetchByIdResponse);
  rpc FetchByNameBook (BookFetchByNameRequest) returns (BookFetchByNameResponse);
  rpc FetchAllBook(google.protobuf.Empty) returns (BookFetchAllResponse);
  rpc UpdateBook (BookUpdateRequest) returns (BookUpdateResponse);
  rpc DeleteBook (BookDeleteRequest) returns (BookDeleteResponse);
  rpc FetchByAuthorId (BookFetchByAuthorIdRequest) returns (BookFetchByAuthorIdResponse);
}